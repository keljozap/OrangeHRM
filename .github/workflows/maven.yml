# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "feature/Kelly.Zapata" ]
  pull_request:
    branches: [ "feature/Kelly.Zapata" ]

jobs:
  analyze:
    name: Analyze Code
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [java]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        
    # Autobuild attempts to build any compiled languages  (C/C++, C#, Go, or Java). # Autobuild attempts to build any compiled languages  (C/C++, C#, Go, or Java).
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"
        
  test:
    needs: analyze
    permissions: write-all
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
       os: [ubuntu-latest, macOs-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github 
        settings-path: ${{ github.workspace }}
        
    - name: Build with Maven
      if: always()
      run: mvn clean verify
      
    - name: Build with Maven using firefox
      if: always()
      run: mvn clean verify -Ddriver=firefox
      
    - name: Grant execute permissions for gradle
      if: always()
      run: chmod +x gradlew
      
    - name: Build with Gradle
      if: always()
      run: ./gradlew clean test

    - name: Publish Report
      if: always()
      uses: dorny/test-reporter@v1.6.0
      with:
        name: Publish Test Result
        path: "**/target/site/serenity/SERENITY-JUNIT-*.xml"
        reporter: java-junit
      
       

  
    

